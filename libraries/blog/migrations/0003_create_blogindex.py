# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-18 00:36
from __future__ import unicode_literals

from django.db import migrations
from wagtail.core.models import Page


def create_blogindex(apps, schema_editor):
    # Get models
    ContentType = apps.get_model('contenttypes.ContentType')
    BlogIndex = apps.get_model('blog.BlogIndex')

    # Delete any existing blogindex
    # Protects if migration is run multiple times
    BlogIndex.objects.filter(slug='blog', depth=3).delete()

    # Get content type for blogindex model
    blogindex_content_type, __ = ContentType.objects.get_or_create(
        model='blogindex', app_label='blog')

    home_page = Page.objects.get(slug='home')

    blogindex = BlogIndex(
        title="CCA Libraries Blog",
        draft_title="CCA Libraries Blog",
        slug='blog',
        content_type=blogindex_content_type,
        depth=3,
        url_path='/home/blog/'
    )

    # Create a new blogindex as child of home page
    home_page.add_child(instance=blogindex)


def remove_blogindex(apps, schema_editor):
    # Get models
    # ContentType = apps.get_model('contenttypes.ContentType')
    BlogIndex = apps.get_model('blog.BlogIndex')

    # Delete the default blogindex
    # Page and Site objects CASCADE
    BlogIndex.objects.filter(slug='blog', depth=3).delete()

    # Delete content type for homepage model
    # NOTE: I don't _think_ we need to delete the blogindex content type
    # I based this migration off of 0002_create_homepage.py
    # ContentType.objects.filter(model='blogindex', app_label='blog').delete()


class Migration(migrations.Migration):
    # we need the blogindex model to already exist
    dependencies = [
        ('blog', '0002_blogindex'),
        ('home', '0002_create_homepage'),
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtailcore', '0043_lock_fields'),
    ]

    operations = [
        migrations.RunPython(create_blogindex, remove_blogindex),
    ]
