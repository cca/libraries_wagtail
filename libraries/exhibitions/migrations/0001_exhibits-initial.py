# Generated by Django 2.0.2 on 2018-08-02 23:25

import categories.models
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtailimages', '0020_add-verbose-name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExhibitArtwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('type', models.CharField(choices=[('image', 'Image'), ('audio', 'Audio'), ('video', 'Video'), ('html', 'Embed code (HTML)')], default='image', help_text='Used to determines the way this work appears in the gallery.', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('creator', models.TextField(blank=True, verbose_name='Creator(s)')),
                ('link', models.TextField(blank=True, help_text='Optional, if provided the title will be hyperlinked to this URL.')),
                ('embed_code', models.TextField(blank=True, help_text='Optional, use this for HTML embeds, videos, audio, etc.')),
                ('description', wagtail.core.fields.RichTextField(blank=True, help_text='Notes or a general description.')),
                ('image', models.ForeignKey(blank=True, help_text='Image (used as the thumbnail if this isn\'t an "image" type work)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExhibitPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('display_template', models.CharField(choices=[('banner', 'Single header image'), ('foursquare', 'Four square header images')], default='banner', help_text='There are two layouts for the header; one large banner image or four square images set to the left of the title.', max_length=20)),
                ('location', wagtail.core.fields.RichTextField(blank=True, help_text='E.g. Simpson, Meyer')),
                ('dates', wagtail.core.fields.RichTextField(blank=True, help_text='Time period when the exibit ran.')),
                ('creators', wagtail.core.fields.RichTextField(blank=True, help_text='Name(s) of artists and curators.')),
                ('reception', wagtail.core.fields.RichTextField(blank=True, help_text='Details about the reception like date/time.')),
                ('description', wagtail.core.fields.StreamField([('subheading', wagtail.core.blocks.CharBlock(classname='title', icon='title', template='categories/blocks/subheading.html')), ('paragraph', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'document-link', 'h3', 'ol', 'ul', 'image', 'embed', 'hr'], icon='pilcrow', template='categories/blocks/paragraph.html')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'document-link'], required=False))])), ('linked_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'document-link'], required=False)), ('link', wagtail.core.blocks.URLBlock())])), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('name', wagtail.core.blocks.CharBlock(required=False)), ('position', wagtail.core.blocks.CharBlock(label='Position or affiliation', required=False))])), ('snippet', wagtail.core.blocks.RichTextBlock(label='Callout', template='categories/blocks/snippet.html')), ('html', categories.models.EmbedHTML(label='Embed code')), ('row', wagtail.core.blocks.StreamBlock([('paragraph', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'document-link', 'h3', 'ol', 'ul', 'image', 'embed', 'hr'], icon='pilcrow', template='categories/blocks/paragraph.html')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'document-link'], required=False))])), ('linked_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'document-link'], required=False)), ('link', wagtail.core.blocks.URLBlock())])), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('name', wagtail.core.blocks.CharBlock(required=False)), ('position', wagtail.core.blocks.CharBlock(label='Position or affiliation', required=False))])), ('snippet', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'document-link', 'h3', 'ol', 'ul', 'image', 'embed', 'hr'], label='Callout', template='categories/blocks/snippet.html'))], max_num=2))], null=True, verbose_name='Introduction/Description')),
                ('epilogue', wagtail.core.fields.RichTextField(blank=True, help_text='Footer text (e.g. for licensing, attribution)')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ExhibitsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('front_matter', wagtail.core.fields.RichTextField(blank=True, help_text='Text that appears at the top of the index page by the title.')),
                ('epilogue', wagtail.core.fields.RichTextField(blank=True, help_text='Bottom text just above the footer (e.g. for licensing, attribution notes).')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HeaderImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(help_text='Header image', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailimages.Image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='header_image', to='exhibitions.ExhibitPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='exhibitartwork',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='exhibit_artwork', to='exhibitions.ExhibitPage'),
        ),
    ]
