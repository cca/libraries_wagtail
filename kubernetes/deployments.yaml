# The application itself.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: ${KUBERNETES_NAMESPACE_OVERWRITE}
spec:
  # Start 1 copy of the application.
  replicas: 1

  # Select the pods which are part of this deployment.
  selector:
    matchLabels:
      app: libraries

  # The pod template this deployment will create.
  template:
    metadata:
      labels:
        app: libraries
    spec:
      imagePullSecrets:
        - name: gcr-json-key

      initContainers:
        - name: init-app
          image: ${DOCKER_IMAGE_TAG:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA}
          imagePullPolicy: Always
          command:
            [
              sh,
              -c,
              django-admin.py migrate --noinput && django-admin.py createcachetable,
            ]
          # Env variables form ConfigMap
          envFrom:
            - configMapRef:
                name: app
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-key
                  key: key
            # Database
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: DATABASE_URL
              value: postgres://$(DB_USER):$(DB_PASSWORD)@cloudsqlproxy:5432/$(DB_NAME)
            # Google Cloud Storage
            - name: GS_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: cloud-storage-credentials
                  key: credentials

      containers:
        - name: app
          image: ${DOCKER_IMAGE_TAG:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA}
          imagePullPolicy: Always
          # Env variables form ConfigMap
          envFrom:
            - configMapRef:
                name: app
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-key
                  key: key
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: DATABASE_URL
              value: postgres://$(DB_USER):$(DB_PASSWORD)@cloudsqlproxy:5432/$(DB_NAME)
            # Google Cloud Storage
            - name: GS_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: cloud-storage-credentials
                  key: credentials
            - name: GOOGLE_SMTP_PASS
              valueFrom:
                secretKeyRef:
                  name: smtp-gmail-com-credentials
                  key: password
          # Define the port our application listens on.
          ports:
            - containerPort: 8000
          # Limit memory use to prevent uncontrolled resource use in case of bugs.
          # This can be raised if necessary, but make sure the cluster is large
          # enough or the application won't deploy.
          resources:
            limits:
              memory: 1024Mi
            requests:
              memory: 512Mi
